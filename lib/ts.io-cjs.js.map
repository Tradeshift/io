{"version":3,"file":"ts.io-cjs.js","sources":["../src/log.js","../src/msg.js","../src/app.js","../src/lib.js","../src/hub.js","../src/idx.js"],"sourcesContent":["const colors = [\n\t// Red\n\t// 'hsl(0, 57%, 90%)',\n\t// 'hsl(0, 59%, 80%)',\n\t// 'hsl(0, 59%, 60%)',\n\t// 'hsl(0, 100%, 37%)',\n\t// 'hsl(0, 100%, 30%)',\n\t// 'hsl(0, 100%, 24%)',\n\n\t// Orange\n\t'hsl(32, 100%, 92%)',\n\t'hsl(33, 100%, 84%)',\n\t'hsl(33, 100%, 68%)',\n\t'hsl(33, 100%, 50%)',\n\t'hsl(31, 100%, 47%)',\n\t'hsl(26, 100%, 41%)',\n\n\t// Yellow\n\t'hsl(44, 95%, 92%)',\n\t'hsl(45, 95%, 85%)',\n\t'hsl(44, 96%, 70%)',\n\t'hsl(44, 98%, 53%)',\n\t'hsl(40, 100%, 52%)',\n\t'hsl(34, 100%, 49%)',\n\n\t// Green\n\t'hsl(99, 59%, 90%)',\n\t'hsl(99, 60%, 81%)',\n\t'hsl(99, 61%, 63%)',\n\t'hsl(99, 85%, 42%)',\n\t'hsl(101, 87%, 33%)',\n\t'hsl(103, 91%, 26%)',\n\n\t// Blue\n\t'hsl(199, 100%, 92%)',\n\t'hsl(199, 100%, 84%)',\n\t'hsl(199, 100%, 68%)',\n\t'hsl(199, 100%, 50%)',\n\t'hsl(201, 100%, 40%)',\n\t'hsl(203, 100%, 32%)',\n\n\t// Purple\n\t'hsl(295, 39%, 89%)',\n\t'hsl(295, 40%, 78%)',\n\t'hsl(295, 40%, 57%)',\n\t'hsl(295, 79%, 34%)',\n\t'hsl(294, 82%, 26%)',\n\t'hsl(296, 100%, 19%)',\n\n\t// Pink\n\t'hsl(325, 46%, 89%)',\n\t'hsl(325, 48%, 78%)',\n\t'hsl(325, 48%, 57%)',\n\t'hsl(325, 98%, 33%)',\n\t'hsl(327, 99%, 26%)',\n\t'hsl(329, 100%, 21%)'\n];\n\nfunction debugEnabled(namespace) {\n\tlet debugExpression;\n\ttry {\n\t\tdebugExpression = window.localStorage.getItem('debug');\n\t} catch (error) {\n\t\tif (\n\t\t\terror instanceof DOMException &&\n\t\t\t(error.name === 'DataCloneError' ||\n\t\t\t\terror.code === 25) /* DATA_CLONE_ERR */\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'ts.io error while setting up debug logging. You should ignore this message or set %o while sandboxing your iframe. %O',\n\t\t\t\t'allow-same-origin',\n\t\t\t\terror\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn('ts.io error while setting up debug logging.', error);\n\t\t}\n\t}\n\t// No expression, no logging.\n\tif (!debugExpression) {\n\t\treturn false;\n\t}\n\tconst debugExpressionLength = debugExpression.length;\n\t// If the namespace is shorter than the expression, it definitely won't match.\n\tif (namespace.length < debugExpressionLength) {\n\t\treturn false;\n\t}\n\t// '*' => Log everything.\n\tif (debugExpression === '*') {\n\t\treturn true;\n\t}\n\tlet shouldEnable = false;\n\tfor (let i = 0; i < debugExpressionLength; i++) {\n\t\tconst debugExpressionChar = debugExpression[i];\n\t\tconst matchNamespace = debugExpressionChar === namespace[i];\n\t\tconst atLastChar = i === debugExpressionLength - 1;\n\t\tif (matchNamespace || (atLastChar && debugExpressionChar === '*')) {\n\t\t\tshouldEnable = true;\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tshouldEnable = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn shouldEnable;\n}\n\n/**\n * Console debug logger.\n */\nclass Log {\n\t/**\n\t * @constructor\n\t * @param {string} namespace Namespace\n\t * @param {string} color Color\n\t */\n\tconstructor(namespace, color) {\n\t\tthis.namespace = namespace;\n\t\tthis.color = color;\n\t\tthis.previousTime = 0;\n\t\t/**\n\t\t * @param {string=} message Message\n\t\t * @param {any[]} optionalParams Optional Params\n\t\t */\n\t\tthis.log = (message, ...optionalParams) => {\n\t\t\tconst now = window.performance.now();\n\t\t\tconst deltaTime = now - (this.previousTime || now);\n\t\t\tthis.previousTime = now;\n\t\t\tconsole.log(\n\t\t\t\t`%c${this.namespace}%c - ${message} - %c${parseFloat(deltaTime).toFixed(\n\t\t\t\t\t2\n\t\t\t\t)}ms`,\n\t\t\t\t`color: ${this.color};`,\n\t\t\t\t'font-weight: normal;',\n\t\t\t\t...optionalParams,\n\t\t\t\t`color: ${this.color};`\n\t\t\t);\n\t\t};\n\t}\n}\n\n/**\n * Generate a debug logger.\n * @param {string} namespace Namespace\n * @return {Function}\n */\nexport function log(namespace) {\n\tif (!debugEnabled(namespace)) {\n\t\treturn function() {};\n\t}\n\n\tlet hash = 0;\n\tconst namespaceLength = namespace.length;\n\tfor (let i = 0; i < namespaceLength; i++) {\n\t\thash = (hash << 5) - hash + namespace.charCodeAt(i);\n\t\thash |= 0; // Convert to 32bit integer\n\t}\n\n\tconst color = colors[Math.abs(hash) % colors.length];\n\tconst debug = new Log(namespace, color);\n\treturn debug.log;\n}\n","/**\n * The Message.\n * @typedef {object} Message\n * @property {string} type The type of the message. (one of ['CONNECT', 'CONNACK', 'PUBLISH', 'PINGREQ', 'PINGRES'])\n * @property {string=} topic The topic of the message. (required for 'PUBLISH' type)\n * @property {string=} target Target appId. (required for ['PUBLISH', 'CONNACK', 'PINGREQ'] types)\n * @property {boolean} viaHub The message was brokered by the Hub.\n * @property {string=} token Hack-proof session token. (required for all types except 'CONNECT')\n * @property {*=} data Data to be passed with the message. Can be any type that is compatible with the structured clone algorithm,\n */\n\nconst targetOrigin = '*';\n\n/**\n * Send message to target window.\n * @param {Message} message\n * @param {Window=} targetWindow\n */\nexport function postMessage(message, targetWindow) {\n\tif (!targetWindow) {\n\t\ttargetWindow = window.top;\n\t}\n\ttry {\n\t\ttargetWindow.postMessage(message, targetOrigin);\n\t} catch (error) {\n\t\tif (\n\t\t\terror instanceof DOMException &&\n\t\t\t(error.name === 'DataCloneError' ||\n\t\t\t\terror.code === 25) /* DATA_CLONE_ERR */\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t\"ts.io.publish called with { data } argument that can't be cloned using the structural clone algorithm.\"\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn('Something went wrong while sending postMessage.', error);\n\t\t}\n\t}\n}\n\nconst messageQueue = [];\n\nexport function queueMessage(message, targetWindow) {\n\tif (!targetWindow) {\n\t\ttargetWindow = window.top;\n\t}\n\tmessageQueue.push({\n\t\ttargetWindow,\n\t\tmessage\n\t});\n}\n\nexport function flushQueue(token) {\n\tif (messageQueue.length) {\n\t\tmessageQueue\n\t\t\t.reverse()\n\t\t\t.forEach(queuedMessage =>\n\t\t\t\tqueuedMessage.targetWindow.postMessage(\n\t\t\t\t\t{ ...queuedMessage.message, token },\n\t\t\t\t\ttargetOrigin\n\t\t\t\t)\n\t\t\t);\n\t\treturn messageQueue.length;\n\t}\n\treturn false;\n}\n\n/**\n * Validate message.\n * @param {Message} message\n */\nexport function messageValid(message) {\n\treturn message && message.type;\n}\n\n/**\n * Validate message for 'SPAWN', 'SPAWNED', 'PUBLISH', etc. complex types.\n * @param {Message} message\n */\nexport function complexMessageValid(message) {\n\treturn messageValid(message) && message.target;\n}\n\n/**\n * Message is sent to an App.\n * @param {Message} message\n */\nexport function appMessageValid(message) {\n\treturn (\n\t\tmessageValid(message) &&\n\t\tmessage.viaHub &&\n\t\t['CONNACK', 'PUBLISH', 'PING', 'SPAWN-SUCCESS', 'SPAWN-FAIL'].includes(\n\t\t\tmessage.type\n\t\t)\n\t);\n}\n\n/**\n * Message sent to the Hub.\n * @param {Message} message\n */\nexport function hubMessageValid(message) {\n\treturn (\n\t\tmessageValid(message) &&\n\t\t!message.viaHub &&\n\t\t[\n\t\t\t'CONNECT',\n\t\t\t'PUBLISH',\n\t\t\t'PONG',\n\t\t\t'SPAWN',\n\t\t\t'SPAWN-SUCCESS',\n\t\t\t'SPAWN-FAIL'\n\t\t].includes(message.type)\n\t);\n}\n\n/**\n * Does the topic match the expression?\n *\n * @todo Support more than '*' or exact match.\n *\n * @param {string} topicExpression Topic expression to match.\n * @param {string} topic Topic to match.\n */\nexport function matchTopic(topicExpression, topic) {\n\tif (topicExpression === '*') {\n\t\treturn true;\n\t}\n\treturn topicExpression === topic;\n}\n","import { log } from './log';\nimport {\n\tpostMessage,\n\tqueueMessage,\n\tflushQueue,\n\tmatchTopic,\n\tappMessageValid\n} from './msg';\n\nlet appInstance;\n\n/**\n * The Message Client AKA The App.\n */\nexport function app() {\n\tif (appInstance) {\n\t\treturn appInstance;\n\t}\n\n\tlet debug = log('ts:io:sub');\n\n\tlet appId = '';\n\tlet token = '';\n\n\tlet spawnResolve;\n\n\t/**\n\t * Set of `on()` handlers keyed by `topic`.\n\t * @type {Map<topic: string, handlers: Set<Function>>}\n\t */\n\tconst handlersByTopic = new Map();\n\n\t/**\n\t * Set of `add()` handlers keyed by `method`.\n\t * @type {Map<method: string, handler: Function>}\n\t */\n\tconst methodHandlers = new Map();\n\n\tappInstance = {\n\t\t/**\n\t\t * Handle messages.\n\t\t * @param {string} topic Specific topic that we will call the handler for.\n\t\t * @param {Function} handler Handler of the message.\n\t\t * @returns {Function} Deregistrator of listener.\n\t\t */\n\t\ton(topic, handler) {\n\t\t\tif (handlersByTopic.has(topic)) {\n\t\t\t\thandlersByTopic.get(topic).add(handler);\n\t\t\t} else {\n\t\t\t\thandlersByTopic.set(topic, new Set([handler]));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Return the deregistrator.\n\t\t\t */\n\t\t\treturn () => this.off(topic, handler);\n\t\t},\n\t\t/**\n\t\t * Handle message once.\n\t\t * @param {string} topic Specific topic that we will call the handler for.\n\t\t * @param {Function} handler Handler of the message.\n\t\t * @returns {Function} Deregistrator of listener.\n\t\t */\n\t\tonce(topic, handler) {\n\t\t\tconst wrappedHandler = message => {\n\t\t\t\tthis.off(topic, wrappedHandler);\n\t\t\t\thandler(message);\n\t\t\t};\n\t\t\tthis.on(topic, wrappedHandler);\n\n\t\t\t/**\n\t\t\t * Return the deregistrator.\n\t\t\t */\n\t\t\treturn () => this.off(topic, wrappedHandler);\n\t\t},\n\t\t/**\n\t\t * Remove message handler.\n\t\t * @param  {string} topic Same as the topic which the handler uses.\n\t\t * @param  {Function} handler Reference to the same handler to delete.\n\t\t * @return {boolean} true on success.\n\t\t */\n\t\toff(topic, handler) {\n\t\t\tconst handlers = handlersByTopic.get(topic);\n\t\t\tlet deleted;\n\t\t\tif (handlers) {\n\t\t\t\tdeleted = handlers.delete(handler);\n\t\t\t}\n\t\t\tdebug(\n\t\t\t\t'%s handler %o - %O',\n\t\t\t\tdeleted ? 'Deleted' : \"Didn't find\",\n\t\t\t\ttopic,\n\t\t\t\thandler\n\t\t\t);\n\t\t\treturn deleted;\n\t\t},\n\t\t/**\n\t\t * Publish message..\n\t\t * @param {string} target Target appId. - No wildcards supported\n\t\t * @param {string} topic Topic.\n\t\t * @param {*=} data Data.\n\t\t */\n\t\temit(topic, target, data = {}) {\n\t\t\tif (arguments.length < 2) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'ts.io().publish() called with invalid arguments.',\n\t\t\t\t\targuments\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst message = { type: 'PUBLISH', target, topic, data, token };\n\t\t\tif (token) {\n\t\t\t\tdebug('%o (%o) to %o - %o', 'PUBLISH', topic, target, data);\n\t\t\t\tpostMessage(message);\n\t\t\t} else {\n\t\t\t\tdebug('%o (%o) to %o - %o', 'PUBLISH(queued)', topic, target, data);\n\t\t\t\tqueueMessage(message);\n\t\t\t}\n\t\t},\n\t\tadd(method, handler) {\n\t\t\tmethodHandlers.set(method, handler);\n\t\t},\n\t\t/**\n\t\t * Do something RPC-style (spawn, request, etc.)\n\t\t * @async\n\t\t * @param {string} method Remote method to call (spawn, request, etc.)\n\t\t * @param {string} target Target appId. - No wildcards supported\n\t\t * @param {*=} data Data.\n\t\t * @returns {Promise}\n\t\t */\n\t\tasync call(method, target, data = {}) {\n\t\t\tswitch (method) {\n\t\t\t\tcase 'spawn':\n\t\t\t\t\tconst message = {\n\t\t\t\t\t\ttype: 'SPAWN',\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\ttoken\n\t\t\t\t\t};\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\tdebug('%o to %o - %o', 'SPAWN', target, data);\n\t\t\t\t\t\tpostMessage(message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdebug('%o to %o - %o', 'SPAWN(queued)', target, data);\n\t\t\t\t\t\tqueueMessage(message);\n\t\t\t\t\t}\n\t\t\t\t\t// Wait for response from the app or some sort of failure\n\t\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t\tspawnResolve = resolve;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Handle events this app is listening for.\n\t * @param {MessageEvent} event\n\t */\n\tfunction eventHandler(event) {\n\t\tconst message = event.data;\n\t\t// Only accept messages from the hub in window.top.\n\t\tif (event.source !== window.top || !appMessageValid(message)) {\n\t\t\treturn;\n\t\t}\n\t\t// The hub.top will get its own messages back, they will be ignored.\n\t\tif (message.target && appId && message.target !== appId) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (message.type === 'CONNACK') {\n\t\t\tappId = message.target || '';\n\t\t\ttoken = message.token || '';\n\t\t\tdebug = log('ts:io:sub:' + appId);\n\t\t\tdebug('CONNECTED %o', message);\n\t\t\tif (methodHandlers.has('connect')) {\n\t\t\t\tmethodHandlers.get('connect')();\n\t\t\t}\n\t\t\tif (message.source) {\n\t\t\t\tdebug('SPAWNED from %o - %O', message.source, message);\n\t\t\t\tif (methodHandlers.has('spawn')) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @TODO Timeout handling!\n\t\t\t\t\t */\n\t\t\t\t\tmethodHandlers.get('spawn').apply({}, [\n\t\t\t\t\t\tmessage.data,\n\t\t\t\t\t\tfunction resolve(data) {\n\t\t\t\t\t\t\tpostMessage({\n\t\t\t\t\t\t\t\ttype: 'SPAWN-SUCCESS',\n\t\t\t\t\t\t\t\ttarget: message.source,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\ttoken\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmessage.source\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\t// this app can't be spawned and we should send an error back to the source app\n\t\t\t\t\tpostMessage({\n\t\t\t\t\t\ttype: 'SPAWN-FAIL',\n\t\t\t\t\t\ttarget: message.source,\n\t\t\t\t\t\ttopic: message.topic,\n\t\t\t\t\t\tdata:\n\t\t\t\t\t\t\tmessage.target +\n\t\t\t\t\t\t\t\" doesn't have a 'spawn' handler, it's not compatible with this SPAWN request.\",\n\t\t\t\t\t\ttoken\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet queueLength = flushQueue(token);\n\t\t\tif (queueLength) {\n\t\t\t\tdebug(\n\t\t\t\t\t'Publishing %s queued message%s',\n\t\t\t\t\tqueueLength,\n\t\t\t\t\tqueueLength === 1 ? '' : 's'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Call the matching handlers for the message topic.\n\t\tif (message.type !== 'PING') {\n\t\t\tdebug(\n\t\t\t\t'Received %s (%o) from %o - %O',\n\t\t\t\tmessage.type,\n\t\t\t\tmessage.topic,\n\t\t\t\tmessage.source,\n\t\t\t\tmessage\n\t\t\t);\n\t\t}\n\n\t\tswitch (message.type) {\n\t\t\tcase 'PUBLISH':\n\t\t\t\thandlersByTopic.forEach(\n\t\t\t\t\t(handlers, topic) =>\n\t\t\t\t\t\tmatchTopic(topic, message.topic) &&\n\t\t\t\t\t\thandlers.forEach(handler => handler(message))\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'PING':\n\t\t\t\treturn postMessage({ type: 'PONG', token });\n\t\t\tcase 'SPAWN-SUCCESS':\n\t\t\t\treturn spawnResolve([null, message.data]);\n\t\t\tcase 'SPAWN-FAIL':\n\t\t\t\treturn spawnResolve([message.data, null]);\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Start listening to messages from window.top.\n\t */\n\twindow.addEventListener('message', eventHandler);\n\n\t/**\n\t * Send CONNECT to Hub.\n\t */\n\tdebug('Connecting…');\n\tpostMessage({ type: 'CONNECT' });\n\n\treturn appInstance;\n}\n","/**\n * Are we in the same frame as the Tradeshift® Chrome™?\n * @return {boolean}\n */\nexport function isChromeWindow() {\n\treturn window.ts && window.ts.chrome !== undefined;\n}\n\n/**\n * Heartbeat regularity in ms.\n * @type {number}\n */\nexport const HEARTBEAT = 3333;\n\n/**\n * Harcoded appId for the Tradeshift® Chrome™\n * @type {string}\n */\nexport const CHROME_APP_ID = 'Tradeshift.Chrome';\n","import uuid from 'uuid';\nimport { log } from './log';\nimport { app } from './app';\nimport { postMessage, hubMessageValid, complexMessageValid } from './msg';\nimport { HEARTBEAT as _HEARTBEAT, CHROME_APP_ID } from './lib';\n\nlet hubInstance;\n\n/**\n * Special features supplied by the Tradeshift® Chrome™.\n * @typedef {object} ChromeWindowFeatures\n * @property {function(Window): string} appByWindow Called to get an appId based on a Window object.\n * @property {function(string, Window): Window} windowByApp Called to get a window object based on an appId and the requesting app's Window object.\n */\n\nfunction invalidFunction(name) {\n\treturn function() {\n\t\tthrow new Error(`Can't initialize ts.io() Hub. ${name}() wasn't passed.`);\n\t};\n}\n\n/**\n * The Message Broker AKA The Hub.\n * @param {ChromeWindowFeatures} chrome Special features supplied by the Tradeshift® Chrome™\n */\nexport function hub(chrome) {\n\tif (hubInstance) {\n\t\treturn hubInstance;\n\t}\n\thubInstance = { HEARTBEAT: _HEARTBEAT };\n\n\tconst {\n\t\tappByWindow = invalidFunction('appByWindow'),\n\t\twindowByApp = invalidFunction('windowByApp')\n\t} = chrome;\n\n\t/**\n\t * Quickly test that appByWindow & windowByApp work for 'Tradeshift.Chrome'\n\t */\n\t{\n\t\tconst testChromeWindow = windowByApp(CHROME_APP_ID);\n\t\tconst testNotWindow = !(testChromeWindow instanceof Window);\n\t\tconst testNotAppId = appByWindow(testChromeWindow) !== CHROME_APP_ID;\n\t\tif (testNotWindow) {\n\t\t\tthrow new Error(\n\t\t\t\t`Can't initialize ts.io() Hub. Expected windowByApp('${CHROME_APP_ID}') to return a 'Window' object.`\n\t\t\t);\n\t\t} else if (testNotAppId) {\n\t\t\tthrow new Error(\n\t\t\t\t`Can't initialize ts.io() Hub. Expected appByWindow(windowByApp('${CHROME_APP_ID}')) to return '${CHROME_APP_ID}'.`\n\t\t\t);\n\t\t}\n\t}\n\n\tconst debug = log('ts:io:top');\n\n\t/**\n\t * Set of `add()` handlers keyed by `method`.\n\t * @type {Map<method: string, handler: Function>}\n\t */\n\tconst methodHandlers = new Map();\n\n\t/**\n\t * WeakMap of frames with apps.\n\t * @type {WeakMap<Window, Object<appId: string, token: string>}\n\t */\n\tconst appWindows = new WeakMap();\n\t/**\n\t * Map of when the last PONG, or any other message was sent from an app.\n\t * @type {Map<token: string, Object<lastPong: DOMHighResTimeStamp, timeoutIds: Set<timeoutId: number>}\n\t */\n\tconst appPongs = new Map();\n\n\tconst appSpawns = [];\n\n\tconst add = (method, handler) => {\n\t\tmethodHandlers.set(method, handler);\n\t};\n\tconst call = (method, argsArr) => {\n\t\tif (methodHandlers.has(method)) {\n\t\t\treturn methodHandlers.get(method).apply({}, argsArr);\n\t\t}\n\t};\n\n\tadd('kill', function(targetWindow) {\n\t\ttry {\n\t\t\tconst { appId, token } = appWindows.get(targetWindow);\n\t\t\tdebug('Killing app %o', appId);\n\t\t\tappPongs\n\t\t\t\t.get(token)\n\t\t\t\t.timeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n\t\t\tappPongs.delete(token);\n\t\t\tappWindows.delete(targetWindow);\n\t\t} catch (error) {\n\t\t\tdebug(\"App couldn't be killed in %o - %o\", targetWindow, error);\n\t\t}\n\t});\n\n\t/*\n\t1. after sending CONNACK to an app, PING it after HEARTBEAT ms\n\t2. if it replies, wait HEARTBEAT ms and PING again, - repeat forever\n\t3. if it doesn't reply within 4 * HEARTBEAT ms, consider the client dead and remove it from the list while removing all traces of it\n\t*/\n\tfunction pingApp(opts) {\n\t\tconst { appId, token, targetWindow } = opts;\n\n\t\tconst now = window.performance.now();\n\t\tconst appPongInfo = appPongs.get(token);\n\t\tconst lastPong = (appPongInfo && appPongInfo.lastPong) || now;\n\t\tif (now - lastPong < 3 * hubInstance.HEARTBEAT) {\n\t\t\tappPongInfo.timeoutIds.add(\n\t\t\t\tsetTimeout(() => pingApp(opts), hubInstance.HEARTBEAT)\n\t\t\t);\n\t\t\tpostMessage(\n\t\t\t\t{ type: 'PING', viaHub: true, target: appId, token },\n\t\t\t\ttargetWindow\n\t\t\t);\n\t\t} else {\n\t\t\tdebug('App timed out, considering it dead! %o', appId);\n\t\t\tcall('timeout', [targetWindow, appId]);\n\t\t\ttry {\n\t\t\t\tcall('kill', [targetWindow]);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\twindow.addEventListener('message', function(event) {\n\t\tconst message = event.data;\n\n\t\t// Only accept valid messages from apps.\n\t\tif (!hubMessageValid(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Message from a frame we don't know yet.\n\t\tif (!appWindows.has(event.source)) {\n\t\t\t// The only command should be CONNECT, we fail otherwise.\n\t\t\tif (message.type === 'CONNECT') {\n\t\t\t\tconst appId = appByWindow(event.source);\n\t\t\t\tconst token = uuid();\n\t\t\t\tdebug('CONNECT %o', appId);\n\t\t\t\tappWindows.set(event.source, { appId, token });\n\t\t\t\tconst spawnWaiting = appSpawns.findIndex(\n\t\t\t\t\tspawn => spawn.appId === appId\n\t\t\t\t);\n\t\t\t\tconst connackMessage = {\n\t\t\t\t\ttype: 'CONNACK',\n\t\t\t\t\tviaHub: true,\n\t\t\t\t\ttarget: appId,\n\t\t\t\t\ttoken\n\t\t\t\t};\n\t\t\t\tif (spawnWaiting !== -1) {\n\t\t\t\t\tconst { data, source } = appSpawns[spawnWaiting].message;\n\t\t\t\t\tconnackMessage.source = source;\n\t\t\t\t\tconnackMessage.data = data;\n\t\t\t\t\tappSpawns.splice(spawnWaiting, 1);\n\t\t\t\t}\n\t\t\t\tpostMessage(connackMessage, event.source);\n\t\t\t\tconst pingOpts = { targetWindow: event.source, appId, token };\n\t\t\t\tconst timeoutId = setTimeout(\n\t\t\t\t\t() => pingApp(pingOpts),\n\t\t\t\t\thubInstance.HEARTBEAT\n\t\t\t\t);\n\t\t\t\tappPongs.set(token, {\n\t\t\t\t\tlastPong: window.performance.now(),\n\t\t\t\t\ttimeoutIds: new Set([timeoutId])\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Unexpected critical error! ts.app sent message without being connected!',\n\t\t\t\t\tevent\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (message.token !== appWindows.get(event.source).token) {\n\t\t\tconsole.warn(\n\t\t\t\t'Token seems invalid, discarding message!\\n' +\n\t\t\t\t\tJSON.stringify(message, null, 2)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst appWindow = appWindows.get(event.source);\n\t\tconst token = (message.token = appWindow.token);\n\t\tmessage.source = appWindow.appId;\n\t\tmessage.viaHub = true;\n\n\t\tif (message.source === message.target) {\n\t\t\tconsole.warn(\n\t\t\t\t'Source and destination match, discarding message!\\n' +\n\t\t\t\t\tJSON.stringify(message, null, 2)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (message.type) {\n\t\t\tcase 'PUBLISH':\n\t\t\tcase 'SPAWN-SUCCESS':\n\t\t\tcase 'SPAWN-FAIL': {\n\t\t\t\tif (!complexMessageValid(message)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'Message incomplete for a %s command!\\n%O',\n\t\t\t\t\t\tmessage.type,\n\t\t\t\t\t\tJSON.stringify(message)\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * @TODO Handle the case when the Chrome blocks certain targets for certain sources\n\t\t\t\t */\n\t\t\t\tconst targetWindow = windowByApp(message.target, event.source);\n\t\t\t\tdebug(\n\t\t\t\t\t'Routing %o from %o to %o - %O',\n\t\t\t\t\tmessage.type,\n\t\t\t\t\tmessage.source,\n\t\t\t\t\tmessage.target,\n\t\t\t\t\tmessage\n\t\t\t\t);\n\t\t\t\tpostMessage(message, targetWindow);\n\t\t\t\tif (message.type.indexOf('SPAWN') === 0) {\n\t\t\t\t\tcall(\n\t\t\t\t\t\t'spawn.submit',\n\t\t\t\t\t\tObject.values({\n\t\t\t\t\t\t\tapp: message.source,\n\t\t\t\t\t\t\tparent: message.target,\n\t\t\t\t\t\t\tdata: message.data\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'SPAWN': {\n\t\t\t\tif (!complexMessageValid(message)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'Message incomplete for a SPAWN command!\\n' +\n\t\t\t\t\t\t\tJSON.stringify(message)\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug(\n\t\t\t\t\t'Spawning %o from %o - %O',\n\t\t\t\t\tmessage.target,\n\t\t\t\t\tmessage.source,\n\t\t\t\t\tmessage\n\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\tconst appId = call(\n\t\t\t\t\t\t'spawn',\n\t\t\t\t\t\tObject.values({\n\t\t\t\t\t\t\tapp: message.target,\n\t\t\t\t\t\t\tparent: message.source\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tappSpawns.push({ appId, message });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tpostMessage({\n\t\t\t\t\t\ttype: 'SPAWN-FAIL',\n\t\t\t\t\t\tsource: CHROME_APP_ID,\n\t\t\t\t\t\ttarget: message.source,\n\t\t\t\t\t\ttoken: appWindows.get(windowByApp(CHROME_APP_ID)).token,\n\t\t\t\t\t\ttopic: message.topic,\n\t\t\t\t\t\tdata:\n\t\t\t\t\t\t\tmessage.target + \" is not activated on the current user's account\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'PONG':\n\t\t\t\tappPongs.set(token, {\n\t\t\t\t\t...appPongs.get(token),\n\t\t\t\t\tlastPong: window.performance.now()\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdebug('* %o', event.data);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\thubInstance = {\n\t\ttop: app,\n\t\tadd,\n\t\tcall,\n\t\tHEARTBEAT: hubInstance.HEARTBEAT\n\t};\n\treturn hubInstance;\n}\n","import { app } from './app';\nimport { hub } from './hub';\nimport { isChromeWindow } from './lib';\n\nconst api = isChromeWindow() ? hub : app;\n\nexport default api;\n"],"names":["_HEARTBEAT"],"mappings":"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"}